{
  "_from": "chalk-animation@^1.6.0",
  "_id": "chalk-animation@1.6.0",
  "_inBundle": false,
  "_integrity": "sha512-Q8vVq6eD5IOhWI0s9WdUawDzMRjNrR4rOCiu409eZRTIHID5OjoTTEkpGZngL/BPQnL7yYmBhlXXpPJ9SYuARw==",
  "_location": "/chalk-animation",
  "_phantomChildren": {
    "decamelize-keys": "1.1.0",
    "error-ex": "1.3.1",
    "graceful-fs": "4.1.11",
    "json-parse-better-errors": "1.0.2",
    "locate-path": "2.0.0",
    "loud-rejection": "1.6.0",
    "minimist": "1.2.0",
    "minimist-options": "3.0.2",
    "normalize-package-data": "2.4.0",
    "quick-lru": "1.1.0"
  },
  "_requested": {
    "escapedName": "chalk-animation",
    "fetchSpec": "^1.6.0",
    "name": "chalk-animation",
    "raw": "chalk-animation@^1.6.0",
    "rawSpec": "^1.6.0",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/chalk-animation/-/chalk-animation-1.6.0.tgz",
  "_shasum": "df7fa91c55a9ed2939d4d287a23ad0374479fad0",
  "_shrinkwrap": null,
  "_spec": "chalk-animation@^1.6.0",
  "_where": "/home/tukerty/Dev/DnDLLout",
  "author": {
    "name": "Boris K"
  },
  "bin": {
    "chalk-animation": "./cli.js"
  },
  "bugs": {
    "url": "https://github.com/bokub/chalk-animation/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "chalk": "^2.3.2",
    "gradient-string": "^1.1.0",
    "meow": "^4.0.0"
  },
  "deprecated": false,
  "description": "Colorful animations in terminal output",
  "devDependencies": {
    "ava": "^0.25.0",
    "codecov": "^3.0.0",
    "nyc": "^11.6.0",
    "xo": "^0.20.3"
  },
  "engines": {
    "node": ">=4"
  },
  "homepage": "https://github.com/bokub/chalk-animation",
  "keywords": [
    "animation",
    "chalk",
    "cli",
    "color",
    "colors",
    "colour",
    "command-line",
    "console",
    "formatting",
    "gradient",
    "log",
    "logging",
    "rainbow",
    "shell",
    "string",
    "style",
    "styles",
    "terminal"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "chalk-animation",
  "optionalDependencies": {},
  "readme": "# chalk-animation\n\n[![Build Status](https://img.shields.io/travis/bokub/chalk-animation.svg?branch=master&style=flat-square)](https://travis-ci.org/bokub/chalk-animation)\n[![npm](https://img.shields.io/npm/v/chalk-animation.svg?style=flat-square)](https://www.npmjs.com/package/chalk-animation)\n[![Codecov](https://img.shields.io/codecov/c/github/bokub/chalk-animation.svg?style=flat-square)](https://codecov.io/gh/bokub/chalk-animation)\n[![npm](https://img.shields.io/npm/dw/chalk-animation.svg?style=flat-square&colorB=fe7d37)](https://www.npmjs.com/package/chalk-animation)\n[![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg?style=flat-square)](https://github.com/sindresorhus/xo)\n\n> Colorful animations in terminal output\n\n\n## Available animations\n\n|   Name    |                   Preview                  |\n|:---------:|:------------------------------------------:|\n|  rainbow  | ![rainbow](http://i.imgur.com/napdxdn.gif) |\n|   pulse   | ![pulse](http://i.imgur.com/xdaETwr.gif)   |\n|   glitch  | ![glitch](http://i.imgur.com/834FJU1.gif)  |\n|   radar   | ![radar](http://i.imgur.com/3bFrtRc.gif)   |\n|    neon   | ![neon](http://i.imgur.com/YdAAroI.gif)    |\n|  karaoke  | ![karaoke](https://i.imgur.com/lG7EF1t.gif)|\n\n\n## Install\n\n```bash\n$ npm i chalk-animation\n```\n\n\n## Usage\n\n```javascript\nconst chalkAnimation = require('chalk-animation');\n\nchalkAnimation.rainbow('Lorem ipsum dolor sit amet');\n```\n\n#### Start and stop\n\nYou can stop and resume an animation with `stop()` and `start()`.\n\nWhen created, the instance of chalkAnimation **starts automatically**.\n\n```javascript\nconst rainbow = chalkAnimation.rainbow('Lorem ipsum'); // Animation starts\n\nsetTimeout(() => {\n    rainbow.stop(); // Animation stops\n}, 1000);\n\nsetTimeout(() => {\n    rainbow.start(); // Animation resumes\n}, 2000);\n\n```\n\n#### Automatic stop\n\nAnything printed to the console will stop the previous animation automatically\n\n```javascript\nchalkAnimation.rainbow('Lorem ipsum');\nsetTimeout(() => {\n    // Stop the 'Lorem ipsum' animation, then write on a new line.\n    console.log('dolor sit amet');\n}, 1000);\n```\n\n#### Changing speed\n\nChange the animation speed using a second parameter. Should be greater than 0, default is 1.\n\n```javascript\nchalkAnimation.rainbow('Lorem ipsum', 2); // Two times faster than default\n```\n\n#### Changing text\n\nChange the animated text seamlessly with `replace()`\n\n```javascript\nlet str = 'Loading...';\nconst rainbow = chalkAnimation.rainbow(str);\n\n// Add a new dot every second\nsetInterval(() => {\n\trainbow.replace(str += '.');\n}, 1000);\n```\n\n#### Manual rendering\n\nManually render frames with `render()`, or get the content of the next frame with `frame()`\n\n```javascript\nconst rainbow = chalkAnimation.rainbow('Lorem ipsum').stop(); // Don't start the animation\n\nrainbow.render(); // Display the first frame\n\nconst frame = rainbow.frame(); // Get the second frame\nconsole.log(frame);\n```\n\n\n## CLI mode\n\n```bash\n# Install package globally\n$ npm install --global chalk-animation\n```\n\n```\n$ chalk-animation --help\n\n  Colorful animations in terminal output\n\n  Usage\n    $ chalk-animation <name> [options] [text...]\n\n  Options\n    --duration  Duration of the animation in ms, defaults to Infinity\n    --speed  Animation speed as number > 0, defaults to 1\n\n  Available animations\n    rainbow\n    pulse\n    glitch\n    radar\n    neon\n    karaoke\n\n  Example\n    $ chalk-animation rainbow Hello world!\n```\n\n\n## Related\n\n- [gradient-string](https://github.com/bokub/gradient-string) - Output gradients to terminal\n- [chalk](https://github.com/chalk/chalk) - Output colored text to terminal\n\n\n## License\n\nMIT Â© [Boris K](https://github.com/bokub)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bokub/chalk-animation.git"
  },
  "scripts": {
    "coverage": "nyc report --reporter=text-lcov > coverage.lcov && codecov",
    "test": "xo && nyc ava --serial"
  },
  "version": "1.6.0"
}
